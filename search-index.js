var searchIndex = JSON.parse('{\
"actix_jwt_authc":{"doc":"This crate provides an Actix Web middleware that supports …","t":[12,12,12,3,3,3,3,13,4,3,13,13,13,8,4,3,3,3,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["0","0","0","AuthenticateMiddleware","AuthenticateMiddlewareFactory","AuthenticateMiddlewareSettings","Authenticated","Diff","Error","ErrorResponse","Full","InternalError","InvalidSession","InvalidatedJWTsReader","InvalidatedTokens","InvalidatedTokensTag","JWT","JWTSessionKey","Just","MaybeAuthenticated","NoChange","None","Unauthenticated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","claims","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_response","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_request","from_request","get_hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_option","into_service","invalidated_jwt_reload_frequency","jwt","jwt_authorization_header_prefixes","jwt_decoding_key","jwt_session_key","jwt_validator","message","ne","ne","ne","ne","ne","ne","new","new_transform","poll_ready","read","serialize","serialize","serialize","serialize","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","add","all","remove","tag","tag","0"],"q":["actix_jwt_authcactix_jwt_authc::Error","actix_jwt_authc::InvalidatedTokens","","","","","","actix_jwt_authc::MaybeAuthenticated"],"d":["","","","The actual middleware that extracts JWTs from requests, …","A factory for the authentication middleware.","Settings for AuthenticateMiddlewareFactory. These …","A “must-be-authenticated” type wrapper, which, when …","","","","","","","A reader for invalidated JWTs, for instance from an …","The happy-path result of InvalidatedJWTsReader::read.","An opaque tag that can be used in InvalidatedJWTsReader …","A wrapper around JWTs","A wrapper to hold the key used for extracting a JWT from …","","A “might-be-authenticated” type wrapper.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","How frequently the in-memory set of invalidated JWTs …","","Optional prefixes for extracting a JWT out of the …","JWT Decoding Key; used to ensure that JWTs were signed by …","Optional key for extracting a JWT out of a request’s …","JWT validation configuration options","","","","","","","","Takes an InvalidatedJWTsReader returns a …","","","Reads invalidated JWTs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,7,8,0,0,0,0,9,0,0,9,16,16,0,0,0,0,0,5,0,9,5,16,1,4,5,6,7,8,9,10,11,16,13,1,4,5,6,7,8,9,10,11,16,13,1,4,4,5,6,7,8,9,10,11,4,5,6,7,8,9,10,11,4,5,6,13,4,5,6,7,8,9,4,5,6,7,8,9,16,4,5,6,6,7,8,9,16,16,13,1,4,5,6,7,8,9,10,11,16,13,4,5,6,6,1,4,5,6,7,8,9,10,11,16,13,5,1,10,4,10,10,10,10,13,4,5,6,7,8,9,11,11,1,33,4,5,6,13,16,4,5,6,7,8,9,10,11,6,16,1,4,5,6,7,8,9,10,11,16,13,1,4,5,6,7,8,9,10,11,16,13,1,4,5,6,7,8,9,10,11,16,13,1,4,5,6,7,8,9,10,11,16,13,34,35,36,37,36,37,36,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2]],0,[[[4,[3]]],[[4,[3]]]],[[[5,[3]]],[[5,[3]]]],[6,6],[7,7],[[[8,[3]]],[[8,[3]]]],[[[9,[3]]],[[9,[3]]]],[10,10],[[[11,[3]]],[[11,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[4]]]],[[],[[12,[5]]]],[[],[[12,[6]]]],[[],[[12,[13]]]],[[[4,[14]],4],15],[[[5,[14]],5],15],[[6,6],15],[[7,7],15],[[[8,[14]],8],15],[[[9,[14]],9],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[16,17],[[[4,[18]],19],20],[[[5,[18]],19],20],[[6,19],20],[[6,19],20],[[7,19],20],[[[8,[18]],19],20],[[[9,[18]],19],20],[[16,19],20],[[16,19],20],[[13,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,22]],[[21,22]],[[],23],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[24,[4]]]],[[]],0,0,0,0,0,0,0,[[[4,[14]],4],15],[[[5,[14]],5],15],[[6,6],15],[[7,7],15],[[[8,[14]],8],15],[[[9,[14]],9],15],[10,11],[11],[[1,25],[[26,[12]]]],[[[24,[8]]],[[29,[[28,[27]]]]]],[4,12],[5,12],[6,12],[13,12],[16,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0],"p":[[3,"AuthenticateMiddleware"],[3,"ServiceRequest"],[8,"Clone"],[3,"Authenticated"],[4,"MaybeAuthenticated"],[3,"JWT"],[3,"JWTSessionKey"],[3,"InvalidatedTokensTag"],[4,"InvalidatedTokens"],[3,"AuthenticateMiddlewareSettings"],[3,"AuthenticateMiddlewareFactory"],[4,"Result"],[3,"ErrorResponse"],[8,"PartialEq"],[15,"bool"],[4,"Error"],[3,"HttpResponse"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"HttpRequest"],[4,"Payload"],[15,"u64"],[4,"Option"],[3,"Context"],[4,"Poll"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"StatusCode"],[3,"String"],[3,"TypeId"],[8,"InvalidatedJWTsReader"],[13,"InvalidSession"],[13,"NoChange"],[13,"Diff"],[13,"Full"],[13,"Just"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
